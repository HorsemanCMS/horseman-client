{"version":3,"sources":["webpack://horseman/webpack/universalModuleDefinition","webpack://horseman/webpack/bootstrap","webpack://horseman/external \"isomorphic-fetch\"","webpack://horseman/./src/auth.ts","webpack://horseman/./src/json.ts","webpack://horseman/./src/content/content.datatypes.ts","webpack://horseman/./src/instances.ts","webpack://horseman/./src/accounts.ts","webpack://horseman/./src/instanceusers.ts","webpack://horseman/./src/content/content.types.ts","webpack://horseman/./src/content/content.fields.ts","webpack://horseman/./src/content/content.records.ts","webpack://horseman/./src/index.ts","webpack://horseman/./src/roles.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","API_KEY","API_SECRET","AUTHTOKEN","baseUri","src_json","path","method","body","undefined","headers","Content-Type","Authorization","external_isomorphic_fetch_","JSON","stringify","result","_a","sent","ok","json","console","log","e_1","AUTHENTICATED","isAuthenticated","auth_awaiter","localStorage","getItem","ContentDataTypes","ValidatingAuthToken","auth","Login","email","password","token","setItem","e_2","Register","user","invitetoken","e_3","SetApiKey","secret","instances","all","instances_awaiter","instance","accounts","accounts_awaiter","instanceusers","instanceid","instanceusers_awaiter","update","invite","e_4","content_types","content_types_awaiter","__instanceid","one","typeid","contentType","content_fields","content_fields_awaiter","__typeid","field","__assign","fieldid","f","assign","id","content_datatypes","content_records","content_records_awaiter","recordid","record","content_records_assign","__webpack_exports__","Auth","Roles","Instances","Accounts","InstanceUsers","ContentTypes","ContentFields","ContentRecords","setBaseUri","baseuri"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"horseman\"] = factory();\n\telse\n\t\troot[\"horseman\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"isomorphic-fetch\");","declare var localStorage: any;\r\nimport json from './json';\r\n\r\nexport let API_KEY: string;\r\nexport let API_SECRET: string;\r\nexport let AUTHTOKEN: string;\r\nexport let AUTHENTICATED: boolean = false;\r\n\r\nexport const isAuthenticated = async () => {\r\n    //if we've already determined that we are authenticated\r\n    if(AUTHENTICATED) return AUTHENTICATED;\r\n\r\n    try {\r\n        let result = await json(`/auth/token/validate`);\r\n        if(result) {\r\n            return AUTHENTICATED = true;\r\n        } else {\r\n            return AUTHENTICATED = false;\r\n        }\r\n    } catch(e) {\r\n        console.log(e);\r\n        return AUTHENTICATED = false;\r\n    }\r\n}\r\n\r\nif(typeof localStorage !== 'undefined' && localStorage.getItem('hmtoken')) {\r\n    AUTHTOKEN = localStorage.getItem('hmtoken');\r\n}\r\n\r\nexport const ValidatingAuthToken = isAuthenticated();\r\n\r\nexport const SetApiKey = (key: string, secret?: string) => {\r\n    API_KEY = key;\r\n    API_SECRET = secret;\r\n}\r\n\r\nexport const SetAuthToken = (token: string) => {\r\n    AUTHTOKEN = token;\r\n    if(typeof localStorage !== 'undefined') {\r\n        localStorage.setItem('hmtoken', token);\r\n    }\r\n}\r\n\r\nexport const Login = async (email: string, password: string) => {\r\n\r\n    try {\r\n        let result = await json(`/auth/login`, 'POST', { email, password });\r\n        SetAuthToken(result.token);\r\n        return AUTHENTICATED = true;\r\n    } catch(e) {\r\n        console.log(e);\r\n        return AUTHENTICATED = false;\r\n    }\r\n}\r\n\r\nexport const Logout = () => {\r\n    if(typeof localStorage !== 'undefined' && localStorage.getItem('hmtoken')) {\r\n        AUTHTOKEN = null;\r\n        AUTHENTICATED = false;\r\n        localStorage.removeItem('hmtoken');\r\n    }\r\n}\r\n\r\nexport const Register = async (user: IUser, invitetoken: string) => {\r\n    try {\r\n        let result = await json(`/auth/register/${invitetoken}`, `POST`, user);\r\n       return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport interface IUser {\r\n    id?: number;\r\n    email: string;\r\n    password?: string;\r\n    firstname?: string;\r\n    lastname?: string;\r\n}\r\n\r\nexport default {\r\n    Login,\r\n    API_KEY,\r\n    API_SECRET,\r\n    AUTHTOKEN,\r\n    AUTHENTICATED,\r\n    isAuthenticated,\r\n    ValidatingAuthToken,\r\n    Register,\r\n    SetApiKey,\r\n}","import * as fetch from 'isomorphic-fetch';\r\n\r\nimport { AUTHTOKEN, API_KEY, API_SECRET } from './auth';\r\n\r\nlet baseUri = 'https://api.horseman.io';\r\n\r\nexport const setBaseUri = (baseuri: string) => {\r\n    baseUri = baseuri;\r\n}\r\n\r\nexport const json = async <T = any, R = {}>(path: string, method: string = 'GET', body?: R) => {\r\n\r\n    let headers: any = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n\r\n    if(AUTHTOKEN) {\r\n        headers.Authorization = AUTHTOKEN;\r\n    } else if(API_KEY) {\r\n        headers[\"x-instance-key\"] = API_KEY;\r\n    } else if(API_SECRET) {\r\n        headers[\"x-instance-secret\"] = API_SECRET;\r\n    }\r\n\r\n    try {\r\n        let result = await fetch(`${baseUri}${path}`, {\r\n            method,\r\n            headers,\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok) {\r\n            return <T>(await result.json());\r\n        } else {\r\n            return false;\r\n        }\r\n    } catch(e) {\r\n        console.log(e);\r\n        throw e;\r\n    }\r\n}\r\n\r\nexport default json;","enum ContentDataTypes {\r\n    Float = 1,\r\n    Int = 2,\r\n    ShortText = 3,\r\n    LongText = 4,\r\n    Markdown = 5,\r\n    RichText = 6,\r\n    HTML = 7,\r\n}\r\n\r\nexport default ContentDataTypes;","import json from './json';\r\n\r\nexport const Instances = {\r\n    all: async () => {\r\n        try {\r\n            return await json<Array<IInstance>>('/api/instances');\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (instance: IInstance) => {\r\n        try {\r\n            return await json('/api/instances', 'POST', instance);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface IInstance {\r\n    id?: number;\r\n    accountid?: number;\r\n    name?: string;\r\n    domain?: string;\r\n}\r\n\r\n\r\nexport default Instances;","import json from './json';\r\n\r\nexport const Accounts = {\r\n    all: async () => {\r\n        try {\r\n            return await json<Array<IAccount>>('/api/accounts');\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface IAccount {\r\n    id?: number;\r\n    name?: string;\r\n}\r\n\r\nexport default Accounts;","import json from './json';\r\n\r\nexport const InstanceUsers = {\r\n    all: async (instanceid: number) => {\r\n        try {\r\n            return await json<Array<IInstanceUser>>(`/api/instance/users/${instanceid}`);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (user: IInstanceUser) => {\r\n        try {\r\n            return await json('/api/users', 'POST', user);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    update: async (user: IInstanceUser) => {\r\n        try {\r\n            return await json(`/api/instance/users/${user.instanceid}`, 'PUT', user);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    invite: async (instanceid: number, email: string) => {\r\n        try {\r\n            return await json(`/api/instance/users/${instanceid}/invite`, 'POST', { email });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface IInstanceUser {\r\n    id: number;\r\n    instanceid: number;\r\n    roleid: number;\r\n    email: string;\r\n}\r\n\r\nexport default InstanceUsers;","import json from '../json';\r\n\r\nexport const ContentTypes = {\r\n    all: async (instanceid: number) => {\r\n        try {\r\n            return await json<Array<IContentType>>('/api/content/types/find', 'POST', {\r\n                __instanceid: instanceid\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    one: async (typeid: number) => {\r\n        try {\r\n            return await json<IContentType>(`/api/content/types/${typeid}`);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (contentType: IContentType, instanceid: number) => {\r\n        try {\r\n            contentType.__instanceid = instanceid;\r\n            return await json<{id: number}>(`/api/content/types/`, `POST`, contentType);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    update: async (contentType: IContentType, typeid: number) => {\r\n        try {\r\n            return await json<number>(`/api/content/types/${typeid}`, `PUT`, contentType);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface IContentType {\r\n    [key:string]: any,\r\n    id?: number;\r\n    name?: string;\r\n}\r\n\r\nexport default ContentTypes;","import json from '../json';\r\n\r\nexport const ContentFields = {\r\n    all: async (typeid: number) => {\r\n        try {\r\n            return await json<Array<IContentField>>('/api/content/fields/find', 'POST', {\r\n                __typeid: typeid\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (typeid: number, field: IContentField) => {\r\n        try {\r\n            return await json<{id: string}>(`/api/content/fields/`, 'POST', {\r\n                __typeid: typeid,\r\n                ...field\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    update: async (fieldid: number, field: IContentField) => {\r\n        \r\n        let f = Object.assign({}, field);\r\n        delete f.id\r\n\r\n        try {\r\n            return await json<number, IContentField>(`/api/content/fields/${fieldid}`, 'PUT', {\r\n                ...f\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface IContentField {\r\n    id?: number;\r\n    datatypeid?: number;\r\n    name?: string;\r\n    sortorder?: number;\r\n}\r\n\r\nexport default ContentFields;","import json from '../json';\r\n\r\nexport const ContentRecords = {\r\n    all: async (typeid: number) => {\r\n        try {\r\n            return await json<Array<IContentRecord>>(`/api/content/records/${typeid}`);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    one: async (typeid: number, recordid: number) => {\r\n        try {\r\n            return await json<IContentRecord>(`/api/content/records/${typeid}/${recordid}`);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (typeid: number, record: IContentRecord) => {\r\n        try {\r\n            return await json<{ id: number }>(`/api/content/records/${typeid}`, 'POST', {\r\n                ...record\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    update: async (typeid: number, recordid: number, record: IContentRecord) => {\r\n        try {\r\n            return await json<{ status: 'success' }>(`/api/content/records/${typeid}/${recordid}`, 'PUT', {\r\n                ...record\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport interface IContentRecord {\r\n    [key:string]: string | number;\r\n}\r\n\r\nexport default ContentRecords;","import Auth from './auth';\r\nimport Instances from './instances';\r\nimport Accounts from './accounts';\r\nimport InstanceUsers from './instanceusers';\r\nimport ContentTypes from './content/content.types';\r\nimport ContentFields from './content/content.fields';\r\nimport ContentDataTypes from './content/content.datatypes';\r\nimport ContentRecords from './content/content.records';\r\nimport Roles from './roles';\r\nimport { setBaseUri } from './json';\r\n\r\nexport default {\r\n    Auth,\r\n    Roles,\r\n    Instances,\r\n    Accounts,\r\n    InstanceUsers,\r\n    ContentTypes,\r\n    ContentFields,\r\n    ContentDataTypes,\r\n    ContentRecords,\r\n    setBaseUri,\r\n}","\r\n\r\nexport default [\r\n    {\r\n        id: 1,\r\n        name: 'Owner'\r\n    },\r\n    { \r\n        id: 2,\r\n        name: 'Admin'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Editor'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Analyst'\r\n    }\r\n]\r\n    "],"sourceRoot":""}