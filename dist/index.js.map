{"version":3,"sources":["webpack://horseman/webpack/universalModuleDefinition","webpack://horseman/webpack/bootstrap","webpack://horseman/./src/json.ts","webpack://horseman/./src/auth.ts","webpack://horseman/./src/instanceauth.ts","webpack://horseman/./src/index.ts","webpack://horseman/external \"isomorphic-unfetch\"","webpack://horseman/./src/instances.ts","webpack://horseman/./src/accounts.ts","webpack://horseman/./src/instanceusers.ts","webpack://horseman/./src/content/content.types.ts","webpack://horseman/./src/content/content.fields.ts","webpack://horseman/./src/content/content.datatypes.ts","webpack://horseman/./src/content/content.records.ts","webpack://horseman/./src/content/content.files.ts","webpack://horseman/./src/roles.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_this","auth_1","instanceauth_1","baseUri","setBaseUri","baseuri","json","path","method","body","headers","Content-Type","default","authToken","GetAuthToken","Authorization","GetApiKey","GetApiSecret","fetch","JSON","stringify","result","_a","sent","ok","console","log","e_1","API_KEY","API_SECRET","AUTHTOKEN","json_1","AUTHENTICATED","isAuthenticated","SetApiKey","secret","checkAuthenticated","__awaiter","localStorage","getItem","ValidatingAuthToken","Login","email","password","token","setItem","e_2","Logout","removeItem","Register","user","invitetoken","e_3","InstanceAuth","login","register","instances_1","accounts_1","instanceusers_1","content_types_1","content_fields_1","content_datatypes_1","content_records_1","content_files_1","roles_1","Auth","Instances","Accounts","InstanceUsers","ContentTypes","ContentFields","ContentDataTypes","ContentRecords","ContentFiles","Roles","require","all","instance","instanceid","update","invite","e_4","__instanceid","one","typeid","contentType","__typeid","field","__assign","fieldid","f","assign","id","recordid","record","upload","file","data","FormData","append"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"horseman\"] = factory();\n\telse\n\t\troot[\"horseman\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import 'isomorphic-unfetch';\r\n\r\nimport {GetAuthToken, GetApiKey, GetApiSecret} from './auth';\r\nimport InstanceAuth from './instanceauth';\r\n\r\nexport let baseUri = 'https://api.horseman.io';\r\n\r\nexport const setBaseUri = (baseuri: string) => {\r\n    baseUri = baseuri;\r\n}\r\n\r\nexport const json = async <T = any, R = {}>(path: string, method: string = 'GET', body?: R) => {\r\n\r\n    let headers: any = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n\r\n    if(InstanceAuth.authToken()) {\r\n        headers[\"x-instance-token\"] = InstanceAuth.authToken();\r\n    } else {\r\n        if(GetAuthToken()) {\r\n            headers.Authorization = GetAuthToken();\r\n        } else if(GetApiKey()) {\r\n            headers[\"x-instance-key\"] = GetApiKey();\r\n        } else if(GetApiSecret()) {\r\n            headers[\"x-instance-secret\"] = GetApiSecret();\r\n        }\r\n    }\r\n\r\n    try {\r\n        let result = await fetch(`${baseUri}${path}`, {\r\n            method,\r\n            headers,\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok) {\r\n            return <T>(await result.json());\r\n        } else {\r\n            return false;\r\n        }\r\n    } catch(e) {\r\n        console.log(e);\r\n        throw e;\r\n    }\r\n}\r\n\r\nexport default json;","declare var localStorage: any;\r\nimport json from './json';\r\nimport { IUser } from './interfaces';\r\n\r\nlet API_KEY: string;\r\nlet API_SECRET: string;\r\nlet AUTHTOKEN: string;\r\nlet AUTHENTICATED: boolean = false;\r\n\r\nexport const GetApiKey = () => {\r\n    return API_KEY;\r\n}\r\n\r\nexport const GetApiSecret = () => {\r\n    return API_SECRET;\r\n}\r\n\r\nexport const GetAuthToken = () => {\r\n    return AUTHTOKEN;\r\n}\r\n\r\nexport const isAuthenticated = () => {\r\n    return AUTHENTICATED;\r\n}\r\n\r\nexport const SetApiKey = (key: string, secret?: string) => {\r\n    AUTHTOKEN = null;\r\n    API_KEY = key;\r\n    API_SECRET = secret;\r\n}\r\n\r\nexport const checkAuthenticated = async () => {\r\n    //if we've already determined that we are authenticated\r\n    if(AUTHENTICATED || !AUTHTOKEN) return AUTHENTICATED;\r\n\r\n    try {\r\n        let result = await json(`/auth/token/validate`);\r\n        if(result) {\r\n            return AUTHENTICATED = true;\r\n        } else {\r\n            return AUTHENTICATED = false;\r\n        }\r\n    } catch(e) {\r\n        console.log(e);\r\n        return AUTHENTICATED = false;\r\n    }\r\n}\r\n\r\nif(typeof localStorage !== 'undefined' && localStorage.getItem('hmtoken')) {\r\n    AUTHTOKEN = localStorage.getItem('hmtoken');\r\n}\r\n\r\nexport const ValidatingAuthToken = checkAuthenticated();\r\n\r\n\r\nconst SetAuthToken = (token: string) => {\r\n    AUTHTOKEN = token;\r\n    if(typeof localStorage !== 'undefined') {\r\n        localStorage.setItem('hmtoken', token);\r\n    }\r\n}\r\n\r\nexport const Login = async (email: string, password: string) => {\r\n\r\n    try {\r\n        let result = await json(`/auth/login`, 'POST', { email, password });\r\n        if(result) {\r\n            SetAuthToken(result.token);\r\n            return AUTHENTICATED = true;\r\n        } else {\r\n            return AUTHENTICATED = false;\r\n        }\r\n    } catch(e) {\r\n        console.log(e);\r\n        return AUTHENTICATED = false;\r\n    }\r\n}\r\n\r\nexport const Logout = () => {\r\n    if(typeof localStorage !== 'undefined' && localStorage.getItem('hmtoken')) {\r\n        AUTHTOKEN = null;\r\n        AUTHENTICATED = false;\r\n        localStorage.removeItem('hmtoken');\r\n    }\r\n}\r\n\r\nexport const Register = async (user: IUser, invitetoken: string) => {\r\n    try {\r\n        let result = await json(`/auth/register/${invitetoken}`, `POST`, user);\r\n       return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default {\r\n    Login,\r\n    isAuthenticated,\r\n    ValidatingAuthToken,\r\n    Register,\r\n    SetApiKey,\r\n    GetApiKey,\r\n    GetApiSecret,\r\n    GetAuthToken\r\n}","import json from './json';\r\nimport { IInstanceLogin } from './interfaces';\r\n\r\nlet token: string;\r\n\r\nexport const InstanceAuth = {\r\n    login: async (email: string, password: string) => {\r\n        try {\r\n            const result = await json<{ token: string }>('/api/instance/auth/login', 'POST', {\r\n                email,\r\n                password\r\n            });\r\n            if(result) {\r\n                token = result.token;\r\n            }\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    register: async (login: IInstanceLogin) => {\r\n        try {\r\n            const result = await json<{ token: string }>('/api/instance/auth/register', 'POST', login);\r\n            if(result) {\r\n                token = result.token;\r\n            }\r\n            return result;\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    authToken: () => token\r\n}\r\n\r\n\r\n\r\nexport default InstanceAuth;","import auth from './auth';\r\nimport instances from './instances';\r\nimport accounts from './accounts';\r\nimport instanceUsers from './instanceusers';\r\nimport instanceAuth from './instanceauth';\r\nimport contentTypes from './content/content.types';\r\nimport contentFields from './content/content.fields';\r\nimport contentDataTypes from './content/content.datatypes';\r\nimport contentRecords from './content/content.records';\r\nimport contentFiles from './content/content.files';\r\nimport roles from './roles';\r\nimport { setBaseUri } from './json';\r\n\r\nexport * from './interfaces';\r\nexport const Auth = auth;\r\nexport const Instances = instances;\r\nexport const Accounts = accounts;\r\nexport const InstanceUsers = instanceUsers;\r\nexport const InstanceAuth = instanceAuth;\r\nexport const ContentTypes = contentTypes;\r\nexport const ContentFields = contentFields;\r\nexport const ContentDataTypes = contentDataTypes;\r\nexport const ContentRecords = contentRecords;\r\nexport const ContentFiles = contentFiles;\r\nexport const Roles = roles;\r\n\r\nexport default {\r\n    Auth,\r\n    Roles,\r\n    Instances,\r\n    InstanceAuth,\r\n    Accounts,\r\n    InstanceUsers,\r\n    ContentTypes,\r\n    ContentFields,\r\n    ContentDataTypes,\r\n    ContentRecords,\r\n    ContentFiles,\r\n    setBaseUri,\r\n}\r\n","module.exports = require(\"isomorphic-unfetch\");","import json from './json';\r\nimport { IInstance } from './interfaces';\r\n\r\nexport const Instances = {\r\n    all: async () => {\r\n        try {\r\n            return await json<Array<IInstance>>('/api/instances');\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (instance: IInstance) => {\r\n        try {\r\n            return await json('/api/instances', 'POST', instance);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Instances;","import json from './json';\r\nimport { IAccount } from './interfaces';\r\n\r\nexport const Accounts = {\r\n    all: async () => {\r\n        try {\r\n            return await json<Array<IAccount>>('/api/accounts');\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Accounts;","import json from './json';\r\nimport { IInstanceUser } from './interfaces';\r\n\r\nexport const InstanceUsers = {\r\n    all: async (instanceid: number) => {\r\n        try {\r\n            return await json<Array<IInstanceUser>>(`/api/instance/users/${instanceid}`);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (user: IInstanceUser) => {\r\n        try {\r\n            return await json('/api/users', 'POST', user);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    update: async (user: IInstanceUser) => {\r\n        try {\r\n            return await json(`/api/instance/users/${user.instanceid}`, 'PUT', user);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    invite: async (instanceid: number, email: string) => {\r\n        try {\r\n            return await json(`/api/instance/users/${instanceid}/invite`, 'POST', { email });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default InstanceUsers;","import json from '../json';\r\nimport { IContentType } from '../interfaces';\r\n\r\nexport const ContentTypes = {\r\n    all: async (instanceid: number) => {\r\n        try {\r\n            return await json<Array<IContentType>>('/api/content/types/find', 'POST', {\r\n                __instanceid: instanceid\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    one: async (typeid: number) => {\r\n        try {\r\n            return await json<IContentType>(`/api/content/types/${typeid}`);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (contentType: IContentType, instanceid: number) => {\r\n        try {\r\n            contentType.__instanceid = instanceid;\r\n            return await json<{id: number}>(`/api/content/types/`, `POST`, contentType);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    update: async (contentType: IContentType, typeid: number) => {\r\n        try {\r\n            return await json<number>(`/api/content/types/${typeid}`, `PUT`, contentType);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentTypes;","import json from '../json';\r\nimport { IContentField } from '../interfaces';\r\n\r\nexport const ContentFields = {\r\n    all: async (typeid: number) => {\r\n        try {\r\n            return await json<Array<IContentField>>('/api/content/fields/find', 'POST', {\r\n                __typeid: typeid\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (typeid: number, field: IContentField) => {\r\n        try {\r\n            return await json<{id: string}>(`/api/content/fields/`, 'POST', {\r\n                __typeid: typeid,\r\n                ...field\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    update: async (fieldid: number, field: IContentField) => {\r\n        \r\n        let f = Object.assign({}, field);\r\n        delete f.id\r\n\r\n        try {\r\n            return await json<number, IContentField>(`/api/content/fields/${fieldid}`, 'PUT', {\r\n                ...f\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentFields;","enum ContentDataTypes {\r\n    Float = 1,\r\n    Int = 2,\r\n    ShortText = 3,\r\n    LongText = 4,\r\n    Markdown = 5,\r\n    RichText = 6,\r\n    HTML = 7,\r\n    Image = 8,\r\n    DateTime = 9,\r\n    Date = 10,\r\n    File = 11\r\n}\r\n\r\nexport default ContentDataTypes;","import json from '../json';\r\nimport { IContentRecord } from '../interfaces';\r\n\r\nexport const ContentRecords = {\r\n    all: async (typeid: number) => {\r\n        try {\r\n            return await json<Array<IContentRecord>>(`/api/content/records/${typeid}`);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    one: async (typeid: number, recordid: number) => {\r\n        try {\r\n            return await json<IContentRecord>(`/api/content/records/${typeid}/${recordid}`);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (typeid: number, record: IContentRecord) => {\r\n        try {\r\n            return await json<{ id: number }>(`/api/content/records/${typeid}`, 'POST', {\r\n                ...record\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    update: async (typeid: number, recordid: number, record: IContentRecord) => {\r\n        try {\r\n            return await json<{ status: 'success' }>(`/api/content/records/${typeid}/${recordid}`, 'PUT', {\r\n                ...record\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentRecords;","import Auth from \"../auth\";\r\nimport { baseUri } from \"../json\";\r\n\r\nexport const ContentFiles = {\r\n    upload: async (instanceid: number, file: any) => {\r\n        try {\r\n            let headers: any = {\r\n            }\r\n        \r\n            if(Auth.GetAuthToken()) {\r\n                headers.Authorization = Auth.GetAuthToken();\r\n            } else if(Auth.GetApiKey()) {\r\n                headers[\"x-instance-key\"] = Auth.GetApiKey();\r\n            } else if(Auth.GetApiSecret()) {\r\n                headers[\"x-instance-secret\"] = Auth.GetApiSecret();\r\n            }\r\n        \r\n            try {\r\n                let data = new FormData();\r\n                data.append('file', file);\r\n                let result = await fetch(`${baseUri}/api/content/files/${instanceid}`, {\r\n                    method: 'POST',\r\n                    headers,\r\n                    body: data\r\n                });\r\n        \r\n                if(result.ok) {\r\n                    return (await result.json());\r\n                } else {\r\n                    return false;\r\n                }\r\n            } catch(e) {\r\n                console.log(e);\r\n                throw e;\r\n            }\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n}\r\n\r\nexport default ContentFiles;","export default [\r\n    {\r\n        id: 1,\r\n        name: 'Owner'\r\n    },\r\n    { \r\n        id: 2,\r\n        name: 'Admin'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Editor'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Analyst'\r\n    }\r\n]\r\n    "],"sourceRoot":""}