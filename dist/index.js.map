{"version":3,"sources":["webpack://horseman/webpack/universalModuleDefinition","webpack://horseman/webpack/bootstrap","webpack://horseman/./src/json.ts","webpack://horseman/./src/auth.ts","webpack://horseman/./src/index.ts","webpack://horseman/external \"isomorphic-fetch\"","webpack://horseman/./src/instances.ts","webpack://horseman/./src/accounts.ts","webpack://horseman/./src/instanceusers.ts","webpack://horseman/./src/content/content.types.ts","webpack://horseman/./src/content/content.fields.ts","webpack://horseman/./src/content/content.datatypes.ts","webpack://horseman/./src/content/content.records.ts","webpack://horseman/./src/content/content.files.ts","webpack://horseman/./src/roles.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_this","fetch","auth_1","baseUri","setBaseUri","baseuri","json","path","method","body","headers","Content-Type","AUTHTOKEN","Authorization","API_KEY","API_SECRET","JSON","stringify","result","_a","sent","ok","console","log","e_1","default","json_1","AUTHENTICATED","isAuthenticated","__awaiter","localStorage","getItem","ValidatingAuthToken","SetApiKey","secret","SetAuthToken","token","setItem","Login","email","password","e_2","Logout","removeItem","Register","user","invitetoken","e_3","instances_1","accounts_1","instanceusers_1","content_types_1","content_fields_1","content_datatypes_1","content_records_1","content_files_1","roles_1","Auth","Instances","Accounts","InstanceUsers","ContentTypes","ContentFields","ContentDataTypes","ContentRecords","ContentFiles","Roles","require","all","instance","instanceid","update","invite","e_4","__instanceid","one","typeid","contentType","__typeid","field","__assign","fieldid","f","assign","id","recordid","record","upload","file","data","FormData","append"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"horseman\"] = factory();\n\telse\n\t\troot[\"horseman\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import * as fetch from 'isomorphic-fetch';\r\n\r\nimport { AUTHTOKEN, API_KEY, API_SECRET } from './auth';\r\n\r\nexport let baseUri = 'https://api.horseman.io';\r\n\r\nexport const setBaseUri = (baseuri: string) => {\r\n    baseUri = baseuri;\r\n}\r\n\r\nexport const json = async <T = any, R = {}>(path: string, method: string = 'GET', body?: R) => {\r\n\r\n    let headers: any = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n\r\n    if(AUTHTOKEN) {\r\n        headers.Authorization = AUTHTOKEN;\r\n    } else if(API_KEY) {\r\n        headers[\"x-instance-key\"] = API_KEY;\r\n    } else if(API_SECRET) {\r\n        headers[\"x-instance-secret\"] = API_SECRET;\r\n    }\r\n\r\n    try {\r\n        let result = await fetch(`${baseUri}${path}`, {\r\n            method,\r\n            headers,\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok) {\r\n            return <T>(await result.json());\r\n        } else {\r\n            return false;\r\n        }\r\n    } catch(e) {\r\n        console.log(e);\r\n        throw e;\r\n    }\r\n}\r\n\r\nexport default json;","declare var localStorage: any;\r\nimport json from './json';\r\nimport { IUser } from './index';\r\n\r\nexport let API_KEY: string;\r\nexport let API_SECRET: string;\r\nexport let AUTHTOKEN: string;\r\nexport let AUTHENTICATED: boolean = false;\r\n\r\nexport const isAuthenticated = async () => {\r\n    //if we've already determined that we are authenticated\r\n    if(AUTHENTICATED) return AUTHENTICATED;\r\n\r\n    try {\r\n        let result = await json(`/auth/token/validate`);\r\n        if(result) {\r\n            return AUTHENTICATED = true;\r\n        } else {\r\n            return AUTHENTICATED = false;\r\n        }\r\n    } catch(e) {\r\n        console.log(e);\r\n        return AUTHENTICATED = false;\r\n    }\r\n}\r\n\r\nif(typeof localStorage !== 'undefined' && localStorage.getItem('hmtoken')) {\r\n    AUTHTOKEN = localStorage.getItem('hmtoken');\r\n}\r\n\r\nexport const ValidatingAuthToken = isAuthenticated();\r\n\r\nexport const SetApiKey = (key: string, secret?: string) => {\r\n    API_KEY = key;\r\n    API_SECRET = secret;\r\n}\r\n\r\nexport const SetAuthToken = (token: string) => {\r\n    AUTHTOKEN = token;\r\n    if(typeof localStorage !== 'undefined') {\r\n        localStorage.setItem('hmtoken', token);\r\n    }\r\n}\r\n\r\nexport const Login = async (email: string, password: string) => {\r\n\r\n    try {\r\n        let result = await json(`/auth/login`, 'POST', { email, password });\r\n        SetAuthToken(result.token);\r\n        return AUTHENTICATED = true;\r\n    } catch(e) {\r\n        console.log(e);\r\n        return AUTHENTICATED = false;\r\n    }\r\n}\r\n\r\nexport const Logout = () => {\r\n    if(typeof localStorage !== 'undefined' && localStorage.getItem('hmtoken')) {\r\n        AUTHTOKEN = null;\r\n        AUTHENTICATED = false;\r\n        localStorage.removeItem('hmtoken');\r\n    }\r\n}\r\n\r\nexport const Register = async (user: IUser, invitetoken: string) => {\r\n    try {\r\n        let result = await json(`/auth/register/${invitetoken}`, `POST`, user);\r\n       return result;\r\n    } catch(e) {\r\n        console.log(e);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default {\r\n    Login,\r\n    API_KEY,\r\n    API_SECRET,\r\n    AUTHTOKEN,\r\n    AUTHENTICATED,\r\n    isAuthenticated,\r\n    ValidatingAuthToken,\r\n    Register,\r\n    SetApiKey,\r\n}","import auth from './auth';\r\nimport instances from './instances';\r\nimport accounts from './accounts';\r\nimport instanceUsers from './instanceusers';\r\nimport contentTypes from './content/content.types';\r\nimport contentFields from './content/content.fields';\r\nimport contentDataTypes from './content/content.datatypes';\r\nimport contentRecords from './content/content.records';\r\nimport contentFiles from './content/content.files';\r\nimport roles from './roles';\r\nimport { setBaseUri } from './json';\r\n\r\nexport const Auth = auth;\r\nexport const Instances = instances;\r\nexport const Accounts = accounts;\r\nexport const InstanceUsers = instanceUsers;\r\nexport const ContentTypes = contentTypes;\r\nexport const ContentFields = contentFields;\r\nexport const ContentDataTypes = contentDataTypes;\r\nexport const ContentRecords = contentRecords;\r\nexport const ContentFiles = contentFiles;\r\nexport const Roles = roles;\r\n\r\nexport interface IContentField {\r\n    id?: number;\r\n    datatypeid?: number;\r\n    name?: string;\r\n    sortorder?: number;\r\n}\r\n\r\nexport interface IContentRecord {\r\n    [key:string]: string | number;\r\n}\r\n\r\nexport interface IContentType {\r\n    [key:string]: any,\r\n    id?: number;\r\n    name?: string;\r\n}\r\n\r\nexport interface IUser {\r\n    id?: number;\r\n    email: string;\r\n    password?: string;\r\n    firstname?: string;\r\n    lastname?: string;\r\n}\r\n\r\nexport interface IInstanceUser {\r\n    id: number;\r\n    instanceid: number;\r\n    roleid: number;\r\n    email: string;\r\n}\r\n\r\nexport interface IAccount {\r\n    id?: number;\r\n    name?: string;\r\n}\r\n\r\nexport interface IInstance {\r\n    id?: number;\r\n    accountid?: number;\r\n    name?: string;\r\n    domain?: string;\r\n}\r\n\r\nexport default {\r\n    Auth,\r\n    Roles,\r\n    Instances,\r\n    Accounts,\r\n    InstanceUsers,\r\n    ContentTypes,\r\n    ContentFields,\r\n    ContentDataTypes,\r\n    ContentRecords,\r\n    ContentFiles,\r\n    setBaseUri,\r\n}\r\n","module.exports = require(\"isomorphic-fetch\");","import json from './json';\r\nimport { IInstance } from './index';\r\n\r\nexport const Instances = {\r\n    all: async () => {\r\n        try {\r\n            return await json<Array<IInstance>>('/api/instances');\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (instance: IInstance) => {\r\n        try {\r\n            return await json('/api/instances', 'POST', instance);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Instances;","import json from './json';\r\nimport { IAccount } from './index';\r\n\r\nexport const Accounts = {\r\n    all: async () => {\r\n        try {\r\n            return await json<Array<IAccount>>('/api/accounts');\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Accounts;","import json from './json';\r\nimport { IInstanceUser } from './index';\r\n\r\nexport const InstanceUsers = {\r\n    all: async (instanceid: number) => {\r\n        try {\r\n            return await json<Array<IInstanceUser>>(`/api/instance/users/${instanceid}`);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (user: IInstanceUser) => {\r\n        try {\r\n            return await json('/api/users', 'POST', user);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    update: async (user: IInstanceUser) => {\r\n        try {\r\n            return await json(`/api/instance/users/${user.instanceid}`, 'PUT', user);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    invite: async (instanceid: number, email: string) => {\r\n        try {\r\n            return await json(`/api/instance/users/${instanceid}/invite`, 'POST', { email });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default InstanceUsers;","import json from '../json';\r\nimport { IContentType } from '../index';\r\n\r\nexport const ContentTypes = {\r\n    all: async (instanceid: number) => {\r\n        try {\r\n            return await json<Array<IContentType>>('/api/content/types/find', 'POST', {\r\n                __instanceid: instanceid\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    one: async (typeid: number) => {\r\n        try {\r\n            return await json<IContentType>(`/api/content/types/${typeid}`);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (contentType: IContentType, instanceid: number) => {\r\n        try {\r\n            contentType.__instanceid = instanceid;\r\n            return await json<{id: number}>(`/api/content/types/`, `POST`, contentType);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    update: async (contentType: IContentType, typeid: number) => {\r\n        try {\r\n            return await json<number>(`/api/content/types/${typeid}`, `PUT`, contentType);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentTypes;","import json from '../json';\r\nimport { IContentField } from '../index';\r\n\r\nexport const ContentFields = {\r\n    all: async (typeid: number) => {\r\n        try {\r\n            return await json<Array<IContentField>>('/api/content/fields/find', 'POST', {\r\n                __typeid: typeid\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (typeid: number, field: IContentField) => {\r\n        try {\r\n            return await json<{id: string}>(`/api/content/fields/`, 'POST', {\r\n                __typeid: typeid,\r\n                ...field\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    update: async (fieldid: number, field: IContentField) => {\r\n        \r\n        let f = Object.assign({}, field);\r\n        delete f.id\r\n\r\n        try {\r\n            return await json<number, IContentField>(`/api/content/fields/${fieldid}`, 'PUT', {\r\n                ...f\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentFields;","enum ContentDataTypes {\r\n    Float = 1,\r\n    Int = 2,\r\n    ShortText = 3,\r\n    LongText = 4,\r\n    Markdown = 5,\r\n    RichText = 6,\r\n    HTML = 7,\r\n    Image = 8\r\n}\r\n\r\nexport default ContentDataTypes;","import json from '../json';\r\nimport { IContentRecord } from '../index';\r\n\r\nexport const ContentRecords = {\r\n    all: async (typeid: number) => {\r\n        try {\r\n            return await json<Array<IContentRecord>>(`/api/content/records/${typeid}`);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    one: async (typeid: number, recordid: number) => {\r\n        try {\r\n            return await json<IContentRecord>(`/api/content/records/${typeid}/${recordid}`);\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    create: async (typeid: number, record: IContentRecord) => {\r\n        try {\r\n            return await json<{ id: number }>(`/api/content/records/${typeid}`, 'POST', {\r\n                ...record\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n    update: async (typeid: number, recordid: number, record: IContentRecord) => {\r\n        try {\r\n            return await json<{ status: 'success' }>(`/api/content/records/${typeid}/${recordid}`, 'PUT', {\r\n                ...record\r\n            });\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentRecords;","import { AUTHTOKEN, API_KEY, API_SECRET } from \"../auth\";\r\nimport { baseUri } from \"../json\";\r\n\r\nexport const ContentFiles = {\r\n    upload: async (instanceid: number, file: any) => {\r\n        try {\r\n            let headers: any = {\r\n            }\r\n        \r\n            if(AUTHTOKEN) {\r\n                headers.Authorization = AUTHTOKEN;\r\n            } else if(API_KEY) {\r\n                headers[\"x-instance-key\"] = API_KEY;\r\n            } else if(API_SECRET) {\r\n                headers[\"x-instance-secret\"] = API_SECRET;\r\n            }\r\n        \r\n            try {\r\n                let data = new FormData();\r\n                data.append('file', file);\r\n                let result = await fetch(`${baseUri}/api/content/files/${instanceid}`, {\r\n                    method: 'POST',\r\n                    headers,\r\n                    body: data\r\n                });\r\n        \r\n                if(result.ok) {\r\n                    return (await result.json());\r\n                } else {\r\n                    return false;\r\n                }\r\n            } catch(e) {\r\n                console.log(e);\r\n                throw e;\r\n            }\r\n        } catch(e) {\r\n            console.log(e);\r\n            return false;\r\n        }\r\n    },\r\n}\r\n\r\nexport default ContentFiles;","export default [\r\n    {\r\n        id: 1,\r\n        name: 'Owner'\r\n    },\r\n    { \r\n        id: 2,\r\n        name: 'Admin'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Editor'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Analyst'\r\n    }\r\n]\r\n    "],"sourceRoot":""}